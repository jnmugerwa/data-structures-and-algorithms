<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">

    <!--Make sure modelVersion is 4.0.0 -->
    <modelVersion>4.0.0</modelVersion>
    <!-- groupId is used to identify the organization -->
    <groupId>jnmugerwa</groupId>
    <!-- artifactId is used to name the specific project -->
    <artifactId>data-structures-and-algorithms</artifactId>
    <!-- type of file you want to output -->
    <packaging>jar</packaging>
    <!-- Version of your project -->
    <version>1.0</version>

    <!-- Defines UTF-8 encoding -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- Dependencies section for libraries put all of your libraries in here -->
    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>

        <!--
            jopt-simple is a command line parser.
            https://pholser.github.io/jopt-simple/.
        -->
        <dependency>
            <groupId>net.sf.jopt-simple</groupId>
            <artifactId>jopt-simple</artifactId>
            <version>6.0-alpha-3</version>
        </dependency>

        <!--
            junit is a testing framework.
            http://junit.org/junit4/.
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
        </dependency>

        <!--
            Hamcrest is used for creating assertion tests in junit.
            https://github.com/hamcrest/JavaHamcrest.
        -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
        </dependency>

        <!--
            Google Guava is a useful collections library.
            https://github.com/google/guava.
        -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>
    </dependencies>

    <!-- Build section -->
    <build>
        <plugins>

            <!-- Maven compiler plugin for compiling Java 11 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M4</version>
            </plugin>
            <!-- Minimum maven version is 3.6.0 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.0</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- Reporting Section -->
    <reporting>
        <plugins>

            <!--
                Plugin used to report on project dependencies.
                https://maven.apache.org/plugins/maven-project-info-reports-plugin/.
            -->
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <!-- Until it uses BCEL 6.0, details breaks on Java 11 -->
                    <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                    <!-- jetty related locations can't be found, just skip. -->
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>

            <!--
                Maven JXR plugin used with PMD plugin for referencing code errors.
                https://maven.apache.org/jxr/maven-jxr-plugin/.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>

            <!--
                PMD looks for bad coding practices such as unused variables.
                https://maven.apache.org/plugins/maven-pmd-plugin/.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.12.0</version>
            </plugin>

            <!--
                spotbugs plugin to highlight possible code errors.
                https://spotbugs.readthedocs.io/en/latest/maven.html.
            -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>3.1.12.2</version>
                <configuration>
                    <!--
                        Enable analysis which takes more memory but finds more bugs.
                        If you run out of memory, change the value to 'Low'.
                    -->
                    <effort>Max</effort>
                    <!-- Report all bugs (other values are medium and max) -->
                    <threshold>Low</threshold>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>